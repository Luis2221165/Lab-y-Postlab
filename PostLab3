//***************************************************************************
//Universidad del valle de Guatemala
//IE2023: Programaci贸n de Microcontroladores
//Autor: Luis Angel Ramirez Or贸zco
//Proyecto: PostLab3
//Hardware: ATMEGA328P
//Creado: 10/02/2024
//***************************************************************************

//***************************************************************************
//Encabezado
//***************************************************************************
.INCLUDE "M328PDEF.inc"
.CSEG
.ORG 0x00
    JMP MAIN ;Reset
.ORG 0x0006
    JMP ISR_PCINT0 ;Vector ISR
.ORG 0X0020
    JMP ISR_TIMER0_OVF ;Vector del tiempo en ISR

MAIN:
    //***************************************************************************
    // Stack pointer
    //***************************************************************************
	LDI R16, LOW(RAMEND)
    OUT SPL, R16
    LDI R17, HIGH(RAMEND)
    OUT SPH, R17
//***************************************************************************
//Configuraci贸n
//***************************************************************************

SETUP:
      LDI R16, 0b1000_0000
	  LDI R16, (1 << CLKPCE) ;Desplazar a Clkpce
	  STS CLKPR, R16 ;Habilitar preescalar
	  LDI R16, 0b0000_0001
	  STS CLKPR, R16 ;frecuancia a 8MHz
	  LDI R16, 0b01111111
	  OUT DDRD, R16 ;Cargar PD0 a PR6 como salidas

	  LDI R16, 0b00000111
	  OUT DDRB, R16 ;Cargar PB1 Y PB2 como entrada, ademas PB3 y PB4 como salida
	  LDI R16, 0b00000111
	  OUT PORTB, R16 ;Pull up en PB1 y PB2

	  LDI R16, 0b0011111
	  OUT DDRC, R16 ;Cargar pin PC0 A PC4 como salidas
	  LDI R18, 0
	  LDI R16, (1 << PCIE0)
	  STS PCICR, R16 ;Habilitar PCINT de 0-7

	  LDI R16, (1 << PCINT1)|(1 << PCINT2)
	  STS PCMSK0, R16 ;Registro de MSK
	  SBI PINB, PB4 ;Comenzar display 2
	  SEI ;Interrupci贸n global
	  LDI R19, 0
	  LDI R17, 0
	  LDI R28, 0
	  LDI R25, 0

//***************************************************************************
//Tabla del display
//***************************************************************************
      TABLA: .DB 0x3F, 0x06, 0x5b, 0x4F, 0x66, 0x6D, 0x7C, 0x07, 0x7F, 0x6F
	  LDI R22, 0 ;Contador de las unidades
	  LDI R21, 0 ;Contador de las Decenas
	  CALL INITTIMER0

LOOP:
      CPI R22, 10
	  BREQ RESETT
	  CPI R23, 50 ;Determinar la cantidad de veces a dado el TIMER0
	  BREQ UNIDADES
	    
		CALL RETARDO
		SBI PINB, PB3  ;Encender PB3
		SBI PINB, PB4  ;Apagar PB4
		LDI ZH, HIGH(TABLA << 1) ;Byte mas significativo
		ADD ZL, R21
		LPM R25, Z
		OUT PORTD, R25 
		CALL RETARDO
		SBI PINB, PB3 ;Apagar PB3
		SBI PINB, PB4 ;Encender PB4
		LDI ZH, HIGH(TABLA << 1) ;Byte mas significativo
		LDI ZL, LOW(TABLA << 1)
		ADD ZL, R22
		LPM R25,Z
		OUT PORTD, R25
		CALL RETARDO

		CPI R21, 6
		BREQ RESDE
	  JMP LOOP ;Retornar a LOOP

	  RETARDO:
	  LDI R19, 255 ;Cargar valor a R16
	  delay:
	       DEC R19 ;Decrementar 
		   BRNE delay ; si R16 no es igual a 0
	  LDI R19, 255
	  delay1:
	       DEC R19
		   BRNE delay1
	  LDI R19, 255
	  delay2:
	       DEC R19
		   BRNE delay2
	  LDI R19, 255
	  delay3:
	       DEC R19
		   BRNE delay3

	  RET

	  RESETT: ;Resetear contador de unidades
	      LDI R22, 0
		  INC R21 ;Suma contador de decenas
		  JMP LOOP

	  UNIDADES: ;Contador de unidades
	      INC R22
		  LDI R23, 0
		  JMP LOOP

	  RESDE: ;Reset del contador de decenas
	  CALL RETARDO
	  LDI R21, 0
	  LDI R22, 0
	  JMP LOOP

//***************************************************************************
//Comenzar TIMER0
//***************************************************************************

INITTIMER0: 
        LDI R26, 0
		OUT TCCR0A, R26

		LDI R26, (1 << CS02)|(1 << CS00)
		OUT TCCR0B, R26 ;Preescalar de 1024

		LDI R26, 100
		OUT TCNT0, R26 ;Iniciar conteo en 158

		LDI R26, (1 << TOIE0)
		STS TIMSK0, R26 ;Activar interrupciones 

		RET

//***************************************************************************
//Subrutina de Pulsadores
//***************************************************************************
ISR_PCINT0:
     PUSH R16
	 IN R16, SREG
	 PUSH R16

	 IN R20, PINB
	 SBRC R20, PB1

	 JMP CPB2 ;Determinar si el pin PB2 esta pulsado

	 DEC R18
	 JMP EXIT


CPB2: 
     SBRC R20, PB2
	 JMP EXIT

	 INC R18 ;Incrementar R18
	 JMP EXIT

EXIT: 
     CPI R18, -1
	 BREQ res1
	 CPI R18, 16
	 BREQ res2

	 OUT PORTC, R18
	 SBI PCIFR, PCIF0 ;Apagar la bandera de ISR PCINT0

	 POP R16
	 OUT SREG, R16
	 POP R16
	 RETI ;Retornar 

res1: ;Resetear valor bajo
    LDI R18, 0
	OUT PORTC, R18
	JMP EXIT

res2: 
    LDI R18, 15
	OUT PORTC, R18
	JMP EXIT

//***************************************************************************
//Subrutina de TOMER0
//***************************************************************************
ISR_TIMER0_OVF:
     PUSH R16
	 IN R16, SREG
	 PUSH R16
	 LDI R16, 100 ;Subir el valor de desbordamiento
	 OUT TCNT0, R16 ;Subir el valor inicial del contador
	 SBI TIFR0, TOV0 ;Borrador de la bandera
	 INC R23 ;Incrementar el contador 20ms
	 POP R16
	 OUT SREG, R16
	 POP R16
	 RETI ;Retornar al LOOP


	        

